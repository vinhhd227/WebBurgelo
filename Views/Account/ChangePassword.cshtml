@model ChangePasswordModel
@{

}
<div class="container-xxl m-auto row row-cols-1 row-cols-lg-2">
    <div class="col">
        <img src="~/content/images/user/changepassword.jpg" class="img-fluid" alt="">
    </div>
    <div class="col m-auto p-5">
        <img src="~/content/images/layout/logo-burgelo.svg" alt="">
        <h5 class="fw-normal my-3 pb-3" style="letter-spacing: 1px;">Change password</h5>
         @if (@TempData["message"] != null)
        {
        <div class="alert alert-danger">
        @TempData["message"]
        </div>
        }
        @using (Html.BeginForm("changepasswordconfirm", "account"))
        {
            @* @Html.AntiForgeryToken() *@
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-outline mb-3">
                    @Html.LabelFor(model => model.OldPassword, htmlAttributes: new { @class = "form-label" })

                        @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @class = "form-control text--subfont" , @type ="password"}
                    })
                        @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger mt-2" })
                </div>
                <div class="form-outline mb-3">
                    @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control text--subfont", @type ="password" } })
                        @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger mt-2" })
                </div>
                <div class="form-outline mb-3">
                    @Html.LabelFor(model => model.ConfirmNewPassword, htmlAttributes: new { @class = "form-label" })
                        @Html.EditorFor(model => model.ConfirmNewPassword, new { htmlAttributes = new { @class = "form-control text--subfont",@type ="password" } })
                        @Html.ValidationMessageFor(model => model.ConfirmNewPassword, "", new { @class = "text-danger mt-2" })
                    </div>
        <div class="container d-flex justify-content-center">
        <button type="submit" class="btn btn--yellow btn-block me-2">Confirm</button>
        <a asp-controller="account" asp-action="userinfo" class="btn btn--dark btn--hover btn-block ms-2">Cancel</a>
        </div>
        }
        @* <form asp-controller="account" asp-action="changepasswordconfirm" method="post">
        @if (@TempData["message"] != null)
        {
        <div class="alert alert-danger">
        @TempData["message"]
        </div>
        }
        <!-- OldPassword input -->
        <div class="form-outline mb-4">
        <label asp-for="OldPassword" class="form-label"></label>
        <input asp-for="OldPassword" class="form-control text--subfont" type="password">
        <span asp-validation-for="OldPassword" class="text text-danger d-block m-2"></span>
        </div>
        <!-- Password input -->
        <div class="form-outline mb-4">
        <label asp-for="NewPassword" class="form-label"></label>
        <input asp-for="NewPassword" class="form-control text--subfont" type="password">
        <span asp-validation-for="NewPassword" class="text text-danger d-block m-2"></span>
        </div>
        <!-- ConfirmNewPassword input -->
        <div class="form-outline mb-4">
        <label asp-for="ConfirmNewPassword" class="form-label"></label>
        <input asp-for="ConfirmNewPassword" class="form-control text--subfont" type="password">
        <span asp-validation-for="ConfirmNewPassword" class="text text-danger d-block m-2"></span>
        </div>
        <div class="container d-flex justify-content-center">
        <button type="submit" class="btn btn--yellow btn-block me-2">Confirm</button>
        <a asp-controller="account" asp-action="userinfo" class="btn btn--dark btn--hover btn-block ms-2">Cancel</a>
        </div>
        </form> *@
    </div>
</div>
